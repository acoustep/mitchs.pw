<!doctype html>
<html>
  <head>
    <meta charset="utf-8">

    <!-- Always force latest IE rendering engine or request Chrome Frame -->
    <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible">
    <meta name="author" content="Mitch Stanley">

    <!-- Use title if it's in the page YAML frontmatter -->
    <title>FullStack Stanley | Verifying mobile phone numbers with Rails, Devise and Twilio</title>

      <meta name="twitter:card" content="summary">
      <meta property="og:description" content="Verifying mobile phone numbers with Rails, Devise and Twilio">
      <meta property="og:title" content="Verifying mobile phone numbers with Rails, Devise and Twilio">
      <meta property="og:url" content="http://fullstackstanley.com/read/verifying-mobile-phone-numbers-with-rails-devise-and-twilio">
      <meta property="og:type" content="article">
      <meta property="article:published_time" content="2015-05-13T18:26:00Z">
      <meta property="article:tag" content="Rails">
      <meta property="article:tag" content="Devise">
      <meta property="article:tag" content="Twilio">
      <meta property="article:tag" content="Rails 4.2">

      <link href="../stylesheets/application-4816ef59.css" rel="stylesheet" type="text/css" />
      <link href="../stylesheets/rogue-7109134b.css" rel="stylesheet" type="text/css" />
      <script>
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
          (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
          m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
        ga('create', 'UA-42788138-1', 'auto');
        ga('send', 'pageview');
      </script>
    </head>

    <body class="read read_verifying-mobile-phone-numbers-with-rails-devise-and-twilio">
      <div class="wrapper-for-content-outside-of-footer">
        <header class="centered-navigation">
	<div class="centered-navigation-wrapper">
		<a href="javascript:void(0)" class="mobile-logo">
			<img src="https://raw.githubusercontent.com/thoughtbot/refills/master/source/images/placeholder_logo_3_dark.png" alt="">
		</a>
		<a href="" class="centered-navigation-menu-button">MENU</a>
		<ul class="centered-navigation-menu">
			<li class="nav-link"><a href="/">Home</a></li>
			<li class="nav-link"><a class="contact" href="#top">Contact</a></li>
		</ul>
	</div>
</header>

        <a name="top"></a>
        <div id="contact">
	<div class="partial-container">
		<h5>Contact</h5>
		<p><a href="http://twitter.com/mitchartemis" target="_blank"><span class="fa fa-twitter"></span> Contact me via Twitter</a></p>
		<p><a href="http://github.com/acoustep" target="_blank"><span class="fa fa-github"></span> Contact me via Github</a></p>
	</div>
</div>

        <div id="container">
          <div id="main">
            	<article>
		<h1>Verifying mobile phone numbers with Rails, Devise and Twilio</h1>
    <div class="tags">
        <a href="/read/categories/rails">Rails</a>
        <a href="/read/categories/devise">Devise</a>
        <a href="/read/categories/twilio">Twilio</a>
        <a href="/read/categories/rails-4-2">Rails 4.2</a>
    </div>
		<p><em>Posted on May 13, 2015</em></p>
		<p>This article will cover setting up a new Rails (4.2) application with Devise and allow users to add their mobile phone number to their account.</p>

<p>We&rsquo;ll use the <a href="https://github.com/daddyz/phonelib">phonelib</a> gem to validate numbers and then send a 6 digit code via <a href="https://www.twilio.com/">Twilio</a> to the user&rsquo;s mobile to verify that it&rsquo;s theirs.</p>

<p>I&rsquo;ll be starting afresh with a new Rails application.</p>
<div class="highlight plaintext"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1</pre></td><td class="code"><pre>rails new verify
</pre></td></tr></tbody></table>
</div>

<h2>Dependancies</h2>

<p>Add the following dependancies to your <code>Gemfile</code></p>
<div class="highlight ruby"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2
3
4</pre></td><td class="code"><pre><span class="n">gem</span> <span class="s2">"devise"</span><span class="p">,</span> <span class="s1">'~&gt;3.4.1'</span>
<span class="n">gem</span> <span class="s1">'twilio-ruby'</span><span class="p">,</span> <span class="s1">'~&gt; 4.0.0'</span>
<span class="n">gem</span> <span class="s1">'phonelib'</span>
<span class="n">gem</span> <span class="s1">'dotenv-rails'</span><span class="p">,</span> <span class="ss">:groups</span> <span class="o">=&gt;</span> <span class="p">[</span><span class="ss">:development</span><span class="p">,</span> <span class="ss">:test</span><span class="p">]</span> <span class="c1"># optional</span>
</pre></td></tr></tbody></table>
</div>

<p>Run <code>bundle</code> to install the new gems.</p>

<p>Devise is the authentication system we&rsquo;ll be using.</p>

<p>Twilio-ruby will be used to send text messages. Make sure you sign up at <a href="https://www.twilio.com/">Twilio</a> and make a note of your test credentials.  </p>

<p>Note that when you use test credentials you will not receive a text. You&rsquo;ll only receive an API response from Twilio.</p>

<p><a href="https://github.com/daddyz/phonelib">Phonelib</a> is a gem which validates phone numbers based on Google libphonenumber.</p>

<p><a href="https://github.com/bkeepers/dotenv">Dotenv</a> let&rsquo;s you set environment variables in development.  I use this to set Twilio test credentials but you can set them your own preferred way if you wish.</p>

<h2>Setting up Devise</h2>

<p>Run devise:install to set it up.</p>
<div class="highlight plaintext"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1</pre></td><td class="code"><pre>rails generate devise:install
</pre></td></tr></tbody></table>
</div>

<p>Make sure you have a home route in <code>config/routes.rb</code> as described in the post-installation command notes.</p>
<div class="highlight ruby"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1</pre></td><td class="code"><pre><span class="n">root</span> <span class="ss">to: </span><span class="s2">"home#index"</span>
</pre></td></tr></tbody></table>
</div>

<p>Add flash messages to your <code>app/views/application.html.erb</code>.</p>

<p><em>Source <a href="http://stackoverflow.com/a/17932167">StackOverflow</a>.</em></p>
<div class="highlight html"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2
3
4
5
6
7
8
9</pre></td><td class="code"><pre><span class="err">&lt;</span>%# Rails flash messages styled for Bootstrap 3.0 %&gt;
<span class="err">&lt;</span>% flash.each do |name, msg| %&gt;
  <span class="err">&lt;</span>% if msg.is_a?(String) %&gt;
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"alert alert-&lt;%= name.to_s == 'notice' ? 'success' : 'danger' %&gt;"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;button</span> <span class="na">type=</span><span class="s">"button"</span> <span class="na">class=</span><span class="s">"close"</span> <span class="na">data-dismiss=</span><span class="s">"alert"</span> <span class="na">aria-hidden=</span><span class="s">"true"</span><span class="nt">&gt;</span><span class="ni">&amp;times;</span><span class="nt">&lt;/button&gt;</span>
      <span class="err">&lt;</span>%= content_tag :div, msg, :id =&gt; "flash_#{name}" %&gt;
    <span class="nt">&lt;/div&gt;</span>
  <span class="err">&lt;</span>% end %&gt;
<span class="err">&lt;</span>% end %&gt;
</pre></td></tr></tbody></table>
</div>

<p>Generate your Devise model.  I prefer to call mine <code>User</code>.</p>
<div class="highlight plaintext"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1</pre></td><td class="code"><pre>rails generate devise User
</pre></td></tr></tbody></table>
</div>

<p>Before you run the migration command add these three columns to <code>db/migrate/20150509173432_devise_create_users.rb</code></p>
<div class="highlight ruby"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2
3</pre></td><td class="code"><pre><span class="n">t</span><span class="p">.</span><span class="nf">string</span>   <span class="ss">:mobile_number</span>
<span class="n">t</span><span class="p">.</span><span class="nf">string</span>   <span class="ss">:verification_code</span>
<span class="n">t</span><span class="p">.</span><span class="nf">boolean</span>  <span class="ss">:is_verified</span>
</pre></td></tr></tbody></table>
</div>

<p>At this point you can run <code>rake db:migrate</code>.</p>

<p><code>mobile_number</code> will hold each user&rsquo;s mobile number. <code>verification_code</code> will hold the generated code that you will send to their phone.  <code>is_verified</code> is a boolean which will become true after a successful verification.</p>

<p>At this point you need to make a user. You can either run the server and go to <code>http://localhost:3000/users/sign_up</code> or do it with <code>rails console</code> and this code: </p>
<div class="highlight ruby"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1</pre></td><td class="code"><pre><span class="no">User</span><span class="p">.</span><span class="nf">create!</span><span class="p">({</span><span class="ss">email: </span><span class="s2">"example@email.com"</span><span class="p">,</span> <span class="ss">password: </span><span class="s2">"test12345"</span><span class="p">})</span>
</pre></td></tr></tbody></table>
</div>

<p>Log in at <code>http://localhost:3000/users/sign_in</code> with your credentials.</p>

<p><em>Note that I haven&rsquo;t made a home controller or a home view. You will see an error when after logging in if you haven&rsquo;t either. It&rsquo;s not important for this article so long as you have successfully logged in.</em></p>

<h2>Adding a mobile number</h2>

<p>We need to add a new form to the user&rsquo;s edit profile page which allows a user to  add their mobile number.  To do this we need to publish the devise views so we can override them.</p>
<div class="highlight plaintext"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1</pre></td><td class="code"><pre>rails g devise:views
</pre></td></tr></tbody></table>
</div>

<p>Add a new field to the form in <code>app/views/devise/registrations/edit.html.erb</code>.</p>
<div class="highlight html"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2
3
4</pre></td><td class="code"><pre>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"field"</span><span class="nt">&gt;</span>
    <span class="err">&lt;</span>%= f.label :mobile_number %&gt;<span class="nt">&lt;br</span> <span class="nt">/&gt;</span>
    <span class="err">&lt;</span>%= f.text_field :mobile_number %&gt;
  <span class="nt">&lt;/div&gt;</span>
</pre></td></tr></tbody></table>
</div>

<p>We will validate mobile numbers before we try to send texts to them.  Earlier we installed the gem phonelib which we&rsquo;ll set up now.</p>

<p>In  <code>app/models/user.rb</code> add the following validation.</p>
<div class="highlight ruby"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2</pre></td><td class="code"><pre>  <span class="n">validates_uniqueness_of</span> <span class="ss">:mobile_number</span>
  <span class="n">validates</span> <span class="ss">:mobile_number</span><span class="p">,</span> <span class="ss">phone: </span><span class="p">{</span> <span class="ss">possible: </span><span class="kp">false</span><span class="p">,</span> <span class="ss">allow_blank: </span><span class="kp">true</span><span class="p">,</span> <span class="ss">types: </span><span class="p">[</span><span class="ss">:mobile</span><span class="p">]</span> <span class="p">}</span>
</pre></td></tr></tbody></table>
</div>

<p><code>validates_uniqueness_of</code> will make sure no two users have the same mobile number.</p>

<p>In the <code>validates</code> method we set up phonelib with <code>possible: false</code> which, if set to true, enables a faster validation which is less strict. <code>allow_blank</code> means a user can enter no number at all. and <code>types</code> sets the types of numbers that are valid.  Since we&rsquo;re sending texts I have set it to <code>mobile</code>.  There are lots of types including <code>voip</code> and <code>personal_number</code>.  You can see a full list in the gem&rsquo;s <a href="https://github.com/daddyz/phonelib">read me</a>.</p>

<p>If you need to restrict the country you can do so by creating <code>config/initializers/phonelib.rb</code> and adding this code</p>
<div class="highlight ruby"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1</pre></td><td class="code"><pre><span class="no">Phonelib</span><span class="p">.</span><span class="nf">default_country</span> <span class="o">=</span> <span class="s2">"GB"</span>
</pre></td></tr></tbody></table>
</div>

<p>Since I am from the UK I will be using GB (Great Britain).</p>

<p><strong>Make sure you restart your rails server after adding this setting.</strong></p>

<p>At this point we need to add <code>mobile_number</code> to Devise&rsquo;s list of acceptable parameters.  The easiest way to do this is to override them in the registration controller.  Run the following command to generate all Devise controllers so that we can override them.</p>
<div class="highlight plaintext"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1</pre></td><td class="code"><pre>rails g devise:controllers acme
</pre></td></tr></tbody></table>
</div>

<p><code>acme</code> is the module and directory to place the new controllers.  Call it what you prefer.  </p>

<p>You can remove all of the newly generated controllers except <code>app/controllers/acme/registrations_controller.rb</code>.</p>

<p>Amend your devise route in <code>config/routes.rb</code> like so:</p>
<div class="highlight ruby"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1</pre></td><td class="code"><pre>  <span class="n">devise_for</span> <span class="ss">:users</span><span class="p">,</span> <span class="ss">:controllers</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:registrations</span> <span class="o">=&gt;</span> <span class="s2">"acme/registrations"</span><span class="p">}</span>
</pre></td></tr></tbody></table>
</div>

<p>Now in <code>app/controllers/acme/registrations_controller.rb</code> add the following code.</p>
<div class="highlight ruby"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2
3
4
5
6
7</pre></td><td class="code"><pre><span class="k">class</span> <span class="nc">Acme</span><span class="o">::</span><span class="no">RegistrationsController</span> <span class="o">&lt;</span> <span class="no">Devise</span><span class="o">::</span><span class="no">RegistrationsController</span>
  <span class="n">before_filter</span> <span class="ss">:configure_account_update_params</span><span class="p">,</span> <span class="ss">only: </span><span class="p">[</span><span class="ss">:update</span><span class="p">]</span>

  <span class="k">def</span> <span class="nf">configure_account_update_params</span>
    <span class="n">devise_parameter_sanitizer</span><span class="p">.</span><span class="nf">for</span><span class="p">(</span><span class="ss">:account_update</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="ss">:mobile_number</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></td></tr></tbody></table>
</div>

<p>Note that this code should already exists and is commented out.  All we&rsquo;ve done is change <code>:attribute</code> to <code>:mobile_number</code>.</p>

<p>At this point a user can add a phone number and we can verify it&rsquo;s a valid number.  To go one step further we need to send the user a validation code for them to enter and verify that they are in possession of the phone.</p>

<h2>Sending a verification code to their mobile</h2>

<p>First let&rsquo;s make a helper method in the <code>User</code> model which will tell us if the account needs to be verified</p>
<div class="highlight ruby"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12</pre></td><td class="code"><pre><span class="c1"># app/models/user.rb</span>
<span class="c1"># ...</span>
  <span class="k">def</span> <span class="nf">needs_mobile_number_verifying?</span>
    <span class="k">if</span> <span class="n">is_verified</span>
      <span class="k">return</span> <span class="kp">false</span>
    <span class="k">end</span>
    <span class="k">if</span> <span class="n">mobile_number</span><span class="p">.</span><span class="nf">empty?</span>
      <span class="k">return</span> <span class="kp">false</span>
    <span class="k">end</span>
    <span class="k">return</span> <span class="kp">true</span>
  <span class="k">end</span>
<span class="c1"># ...</span>
</pre></td></tr></tbody></table>
</div>

<p>If the user is already verified it will return false and if there is no mobile number to verify it will also return false. We&rsquo;ll be using this method shortly.</p>

<p>Create a new controller for handling mobile number verifications. I called mine <code>VerificationsController</code></p>
<div class="highlight plaintext"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1</pre></td><td class="code"><pre>rails g controller verifications
</pre></td></tr></tbody></table>
</div>

<p>Add a route in your routes for the <code>create</code> method.</p>
<div class="highlight ruby"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2</pre></td><td class="code"><pre><span class="c1"># config/routes.rb</span>
<span class="n">post</span> <span class="s1">'verifications'</span> <span class="o">=&gt;</span> <span class="s1">'verifications#create'</span>
</pre></td></tr></tbody></table>
</div>

<p>If you&rsquo;re using <code>dotenv</code> then now is the time to create a <code>.env</code> file in the root of your project and add your test credentials.</p>
<div class="highlight plaintext"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2
3</pre></td><td class="code"><pre>TWILIO_SID=""
TWILIO_TOKEN=""
TWILIO_PHONE_NUMBER="+15005550006"
</pre></td></tr></tbody></table>
</div>

<p>Bear in mind that <code>TWILIO_PHONE_NUMBER</code> is currently set to the test number which is for sending valid text messages.  Once you go live you will need to change it your own Twilio number.  You will need to get your own SID and token from your Twilio account.</p>

<p>Restart your rails server after updating your environment variables.</p>

<p>In the new controller add the following code</p>
<div class="highlight ruby"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21</pre></td><td class="code"><pre>
<span class="c1"># ...</span>
<span class="k">def</span> <span class="nf">create</span>
  <span class="n">current_user</span><span class="p">.</span><span class="nf">verification_code</span> <span class="o">=</span>  <span class="mi">1_000_000</span> <span class="o">+</span> <span class="nb">rand</span><span class="p">(</span><span class="mi">10_000_000</span> <span class="o">-</span> <span class="mi">1_000_000</span><span class="p">)</span>
  <span class="n">current_user</span><span class="p">.</span><span class="nf">save</span>

  <span class="n">to</span> <span class="o">=</span> <span class="n">current_user</span><span class="p">.</span><span class="nf">mobile_number</span>
  <span class="k">if</span> <span class="n">to</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"0"</span>
    <span class="n">to</span><span class="p">.</span><span class="nf">sub!</span><span class="p">(</span><span class="s2">"0"</span><span class="p">,</span> <span class="s1">'+44'</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="vi">@twilio_client</span> <span class="o">=</span> <span class="no">Twilio</span><span class="o">::</span><span class="no">REST</span><span class="o">::</span><span class="no">Client</span><span class="p">.</span><span class="nf">new</span> <span class="no">ENV</span><span class="p">[</span><span class="s1">'TWILIO_SID'</span><span class="p">],</span> <span class="no">ENV</span><span class="p">[</span><span class="s1">'TWILIO_TOKEN'</span><span class="p">]</span>
  <span class="vi">@twilio_client</span><span class="p">.</span><span class="nf">account</span><span class="p">.</span><span class="nf">sms</span><span class="p">.</span><span class="nf">messages</span><span class="p">.</span><span class="nf">create</span><span class="p">(</span>
    <span class="ss">:from</span> <span class="o">=&gt;</span> <span class="no">ENV</span><span class="p">[</span><span class="s1">'TWILIO_PHONE_NUMBER'</span><span class="p">],</span>
    <span class="ss">:to</span> <span class="o">=&gt;</span> <span class="n">to</span><span class="p">,</span>
    <span class="ss">:body</span> <span class="o">=&gt;</span> <span class="s2">"Your verification code is </span><span class="si">#{</span><span class="n">current_user</span><span class="p">.</span><span class="nf">verification_code</span><span class="si">}</span><span class="s2">."</span>
  <span class="p">)</span>
  <span class="n">redirect_to</span> <span class="n">edit_user_registration</span><span class="p">,</span> <span class="ss">:flash</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:success</span> <span class="o">=&gt;</span> <span class="s2">"A verification code has been sent to your mobile. Please fill it in below."</span> <span class="p">}</span>
  <span class="k">return</span>
<span class="k">end</span>
<span class="c1"># ...</span>
</pre></td></tr></tbody></table>
</div>

<ul>
<li><p>On line 3 we create a random six digit verification code and assign it to the user.</p></li>
<li><p>Lines 6-9 checks if the number starts with 0 and if it does then convert it to +44 (which is the UK dialing code). Alternatively you may wish to save this to the database instead of doing it for every text.</p></li>
<li><p>On line 11 we create an instance of the Twilio class with our credentials.</p></li>
<li><p>Lines 12-16 handles sending the message to Twilio.</p></li>
<li><p>On line 17 we redirect back to the edit profile page.</p></li>
</ul>

<p>We&rsquo;re going to add a &ldquo;Verify mobile number&rdquo; button to the edit page but there&rsquo;s no point in showing it if the user already has no mobile number or is already verified. This is where the <code>needs_mobile_number_verifying?</code> method from earlier comes in to play.  We&rsquo;ll add a helper method to store the logic for showing the form.</p>
<div class="highlight plaintext"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1</pre></td><td class="code"><pre>rails g helper acme/registrations
</pre></td></tr></tbody></table>
</div>
<div class="highlight ruby"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13</pre></td><td class="code"><pre><span class="c1"># app/helpers/acme/registrations_helper.rb</span>
<span class="k">module</span> <span class="nn">Registrations::RegistrationsHelper</span>
  <span class="k">def</span> <span class="nf">mobile_verification_button</span>
    <span class="k">return</span> <span class="s1">''</span> <span class="k">unless</span> <span class="n">current_user</span><span class="p">.</span><span class="nf">needs_mobile_number_verifying?</span>
    <span class="n">html</span> <span class="o">=</span> <span class="o">&lt;&lt;-</span><span class="no">HTML</span><span class="sh">
      &lt;h3&gt;Verify Mobile Number&lt;/h3&gt;
      </span><span class="si">#{</span><span class="n">form_tag</span><span class="p">(</span><span class="n">verifications_path</span><span class="p">,</span> <span class="ss">method: </span><span class="s2">"post"</span><span class="p">)</span><span class="si">}</span><span class="sh">
      </span><span class="si">#{</span><span class="n">button_tag</span><span class="p">(</span><span class="s1">'Send verification code'</span><span class="p">,</span> <span class="ss">type: </span><span class="s2">"submit"</span><span class="p">)</span><span class="si">}</span><span class="sh">
      &lt;/form&gt;
</span><span class="no">    HTML</span>
    <span class="n">html</span><span class="p">.</span><span class="nf">html_safe</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></td></tr></tbody></table>
</div>

<p>On line 4 we return an empty string unless the user needs to be verified. On lines 5-11 we have a heredoc which contains the new form.   Note that we could use plain HTML here but the <code>form_tag</code> allows us to use a path and it also adds the CSRF token for us. Lastly, we return <code>html.html_safe</code> which will be the output when we use it in our view.</p>

<p>Now in <code>app/views/devise/registrations/edit.html.erb</code> add the following code after the main form.</p>
<div class="highlight ruby"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2
3
4</pre></td><td class="code"><pre><span class="c1"># ...</span>
<span class="o">&lt;</span><span class="sx">%= mobile_verification_button %&gt;
&lt;h3&gt;Cancel my account&lt;/h3&gt;
# ...
</span></pre></td></tr></tbody></table>
</div>

<p>Now this form will only show when <code>is_verified</code> is <code>false</code> and <code>mobile_number</code> is not empty.</p>

<p>At this point you should enter a mobile number and click the &ldquo;Send verification code&rdquo; button. </p>

<p>With test credentials you won&rsquo;t receive a text but if you spin up <code>rails console</code> and type <code>User.first</code> you should see a 6 digit number in <code>verification_code</code> field.  This code will change each time you click the button.</p>

<h2>Entering the code for verification</h2>

<p>Add a new route and controller method to handle verification</p>
<div class="highlight ruby"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2</pre></td><td class="code"><pre><span class="c1"># config/routes.rb</span>
<span class="n">put</span> <span class="s1">'verifications'</span> <span class="o">=&gt;</span> <span class="s1">'verifications#verify'</span>
</pre></td></tr></tbody></table>
</div>
<div class="highlight ruby"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13</pre></td><td class="code"><pre><span class="c1"># app/controllers/verifications_controller.rb</span>
<span class="k">def</span> <span class="nf">verify</span>
      <span class="k">if</span> <span class="n">current_user</span><span class="p">.</span><span class="nf">verification_code</span> <span class="o">==</span> <span class="n">params</span><span class="p">[</span><span class="ss">:verification_code</span><span class="p">]</span>
      <span class="n">current_user</span><span class="p">.</span><span class="nf">is_verified</span> <span class="o">=</span> <span class="kp">true</span>
      <span class="n">current_user</span><span class="p">.</span><span class="nf">verification_code</span> <span class="o">=</span> <span class="s1">''</span>
      <span class="n">current_user</span><span class="p">.</span><span class="nf">save</span>
      <span class="n">redirect_to</span> <span class="n">edit_user_registration_path</span><span class="p">,</span> <span class="ss">:flash</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:success</span> <span class="o">=&gt;</span> <span class="s2">"Thank you for verifying your mobile number."</span> <span class="p">}</span>
      <span class="k">return</span>
    <span class="k">else</span>
      <span class="n">redirect_to</span> <span class="n">edit_user_registration_path</span><span class="p">,</span> <span class="ss">:flash</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:errors</span> <span class="o">=&gt;</span> <span class="s2">"Invalid verification code."</span> <span class="p">}</span>
      <span class="k">return</span>
    <span class="k">end</span>
<span class="k">end</span>
</pre></td></tr></tbody></table>
</div>

<p>Let&rsquo;s make another helper method which will work the same way as the previous one.</p>

<p>This form will display when the <code>verification_code</code> field isn&rsquo;t empty so the user can enter their code.</p>
<div class="highlight ruby"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13</pre></td><td class="code"><pre><span class="c1"># app/helpers/acme/registrations_helper.rb</span>
  <span class="k">def</span> <span class="nf">verify_mobile_number_form</span>
    <span class="k">return</span> <span class="s1">''</span> <span class="k">if</span> <span class="n">current_user</span><span class="p">.</span><span class="nf">verification_code</span><span class="p">.</span><span class="nf">empty?</span>
    <span class="nb">p</span> <span class="n">current_user</span><span class="p">.</span><span class="nf">verification_code</span><span class="p">.</span><span class="nf">empty?</span>
    <span class="n">html</span> <span class="o">=</span> <span class="o">&lt;&lt;-</span><span class="no">HTML</span><span class="sh">
      &lt;h3&gt;Enter Verification Code&lt;/h3&gt;
      </span><span class="si">#{</span><span class="n">form_tag</span><span class="p">(</span><span class="n">verifications_path</span><span class="p">,</span> <span class="ss">method: </span><span class="s2">"patch"</span><span class="p">)</span><span class="si">}</span><span class="sh">
      </span><span class="si">#{</span><span class="n">text_field_tag</span><span class="p">(</span><span class="s1">'verification_code'</span><span class="p">)</span><span class="si">}</span><span class="sh">
      </span><span class="si">#{</span><span class="n">button_tag</span><span class="p">(</span><span class="s1">'Submit'</span><span class="p">,</span> <span class="ss">type: </span><span class="s2">"submit"</span><span class="p">)</span><span class="si">}</span><span class="sh">
      &lt;/form&gt;
</span><span class="no">    HTML</span>
    <span class="n">html</span><span class="p">.</span><span class="nf">html_safe</span>
  <span class="k">end</span>
</pre></td></tr></tbody></table>
</div>

<p>Finally, add the helper to <code>app/views/devise/registrations/edit.html.erb</code>. </p>
<div class="highlight html"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1</pre></td><td class="code"><pre><span class="err">&lt;</span>%= verify_mobile_number_form %&gt;
</pre></td></tr></tbody></table>
</div>

<p>You can check it&rsquo;s working by generating the verification code and using <code>rails console</code> <code>User.first</code> to retrieve and enter the correct code.</p>

<p>Once you&rsquo;re happy that it works we should let the user know if their mobile is verified in their profile</p>
<div class="highlight html"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2
3
4
5
6
7</pre></td><td class="code"><pre>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"field"</span><span class="nt">&gt;</span>
    <span class="err">&lt;</span>%= f.label :mobile_number %&gt;<span class="nt">&lt;br</span> <span class="nt">/&gt;</span>
    <span class="err">&lt;</span>%= f.text_field :mobile_number %&gt; 
    <span class="err">&lt;</span>% if resource.is_verified %&gt;
      You're mobile number is verified.
    <span class="err">&lt;</span>% end%&gt;
  <span class="nt">&lt;/div&gt;</span>
</pre></td></tr></tbody></table>
</div>

<p>It&rsquo;s also a good idea to stop the code from showing in the log files.</p>
<div class="highlight ruby"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2</pre></td><td class="code"><pre><span class="c1"># app/models/user.rb</span>
<span class="n">filter_parameter_logging</span> <span class="ss">:verification_code</span>
</pre></td></tr></tbody></table>
</div>

<h2>Final notes</h2>

<p>You have a basis for the system here but it can be improved. </p>

<p>If a user enters a new mobile number <code>is_verified</code> should be changed to <code>false</code>.</p>

<p>If <code>rand</code> isn&rsquo;t secure enough for your verification code generator then take a look at <a href="https://github.com/mdp/rotp">The Ruby One Time Password Library</a>.</p>

<p>The current set up is only ideal for users that have one mobile number. What happens if they want to enter more than one?</p>

<p>Lastly, as with emails, sending text messages can be slow. Not waiting-for-a-video-to-load-on-dial-up slow but enough for me to recommend setting up ActiveJob.  I&rsquo;ve been having some good success with Resque for this task.</p>

<p>Here&rsquo;s a quick snippet of the code I&rsquo;ve used on a recent project.</p>
<div class="highlight ruby"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28</pre></td><td class="code"><pre><span class="c1">#  controller </span>
<span class="no">SendVerificationCodeJob</span><span class="p">.</span><span class="nf">perform_later</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>

<span class="c1"># app/jobs/send_verification_code_job.rb</span>
<span class="k">class</span> <span class="nc">SendVerificationCodeJob</span> <span class="o">&lt;</span> <span class="no">ActiveJob</span><span class="o">::</span><span class="no">Base</span>
  <span class="n">queue_as</span> <span class="ss">:default</span>

  <span class="k">def</span> <span class="nf">perform</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
    <span class="c1"># generate verification code</span>

    <span class="n">user</span><span class="p">.</span><span class="nf">verification_code</span> <span class="o">=</span>  <span class="mi">100_000</span> <span class="o">+</span> <span class="nb">rand</span><span class="p">(</span><span class="mi">1_000_000</span> <span class="o">-</span> <span class="mi">100_000</span><span class="p">)</span>

    <span class="n">user</span><span class="p">.</span><span class="nf">save</span>
    <span class="n">to</span> <span class="o">=</span> <span class="n">user</span><span class="p">.</span><span class="nf">mobile_number</span>
    <span class="k">if</span> <span class="n">to</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="s2">"0"</span>
      <span class="n">to</span><span class="p">.</span><span class="nf">sub!</span><span class="p">(</span><span class="s2">"0"</span><span class="p">,</span> <span class="s1">'+44'</span><span class="p">)</span>
    <span class="k">end</span>

    <span class="c1"># twilio send </span>
    <span class="vi">@twilio_client</span> <span class="o">=</span> <span class="no">Twilio</span><span class="o">::</span><span class="no">REST</span><span class="o">::</span><span class="no">Client</span><span class="p">.</span><span class="nf">new</span> <span class="no">ENV</span><span class="p">[</span><span class="s1">'TWILIO_SID'</span><span class="p">],</span> <span class="no">ENV</span><span class="p">[</span><span class="s1">'TWILIO_TOKEN'</span><span class="p">]</span>

    <span class="vi">@twilio_client</span><span class="p">.</span><span class="nf">account</span><span class="p">.</span><span class="nf">sms</span><span class="p">.</span><span class="nf">messages</span><span class="p">.</span><span class="nf">create</span><span class="p">(</span>
      <span class="ss">:from</span> <span class="o">=&gt;</span> <span class="no">ENV</span><span class="p">[</span><span class="s1">'TWILIO_PHONE_NUMBER'</span><span class="p">],</span>
      <span class="ss">:to</span> <span class="o">=&gt;</span> <span class="n">to</span><span class="p">,</span>
      <span class="ss">:body</span> <span class="o">=&gt;</span> <span class="s2">"Your verification code is </span><span class="si">#{</span><span class="n">user</span><span class="p">.</span><span class="nf">verification_code</span><span class="si">}</span><span class="s2">."</span>
    <span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></td></tr></tbody></table>
</div>

	</article>
  <hr>
  <h2>About the Author</h2>
  <div id="about-me">
	<div class="partial-container">
    <p>Hi, I'm Mitch and I'm a 27 year old programmer from the UK.</p>
    
    <p>I work for a web design agency in Telford called The Studio 4. I build web applications with many different languages and tools.</p>

		<p>In my spare time I do many things. I like to read books, lift weights, go bouldering, play board/video games and write these articles!</p>
	</div>
</div>

	<div class="pagination">
		<ul>
			<li class="page-prev"><a href="/">Back to Latest Blogs</a></li>
		</ul>
	</div>
	<div id="disqus_thread"></div>
	<script type="text/javascript">
        /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
		        var disqus_shortname = 'mitchstanleysblog'; // required: replace example with your forum shortname
				
				        /* * * DON'T EDIT BELOW THIS LINE * * */
						        (function() {
	            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
	            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
	            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
	        })();
		</script>
		<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
		<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a></span></a></a></noscript></script></div>

          </div>
        </div>
        <div class="push"></div>
      </div>

      <footer class="footer-2">
        <div class="partial-container">
          <ul>
            <li><a class="contact" href="#">Contact</a></li>
          </ul>

          <div class="footer-secondary-links">
            <ul class="footer-social">
              <li>
                <a href="https://twitter.com/mitchartemis"><span class="fa fa-twitter"></span></a>
              </li>
              <li>
                <a href="https://github.com/acoustep"><span class="fa fa-github"></span></a>
              </li>
            </ul>
          </div>
        </div>
      </footer>
      <script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
      <script src="../javascripts/application-678994e1.js" type="text/javascript"></script>
      <script>
      (function(d, t) {
          var g = d.createElement(t),
              s = d.getElementsByTagName(t)[0];
          g.src = 'http://assets.gfycat.com/js/gfyajax-0.517d.js';
          s.parentNode.insertBefore(g, s);
      }(document, 'script'));
      </script>
    </body>
  </html>
