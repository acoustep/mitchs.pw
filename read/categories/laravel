<!doctype html>
<html>
  <head>
    <meta charset="utf-8">

    <!-- Always force latest IE rendering engine or request Chrome Frame -->
    <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible">
    <meta name="author" content="Mitch Stanley">

    <!-- Use title if it's in the page YAML frontmatter -->
    <title>FullStack Stanley</title>

      <meta name="twitter:card" content="summary">
      <meta property="og:url" content="http://fullstackstanley.com/read/categories/laravel">

      <link href="../../stylesheets/application-feb6d2e3.css" rel="stylesheet" type="text/css" />
      <link href="../../stylesheets/rogue-7109134b.css" rel="stylesheet" type="text/css" />
      <script>
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
          (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
          m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
        ga('create', 'UA-42788138-1', 'auto');
        ga('send', 'pageview');
      </script>
    </head>

    <body class="read read_categories read_categories_laravel">
      <div class="wrapper-for-content-outside-of-footer">
        <header class="centered-navigation">
	<div class="centered-navigation-wrapper">
		<a href="javascript:void(0)" class="mobile-logo">
			<img src="https://raw.githubusercontent.com/thoughtbot/refills/master/source/images/placeholder_logo_3_dark.png" alt="">
		</a>
		<a href="" class="centered-navigation-menu-button">MENU</a>
		<ul class="centered-navigation-menu">
			<li class="nav-link"><a href="/">Home</a></li>
			<li class="nav-link"><a class="contact" href="#top">Contact</a></li>
		</ul>
	</div>
</header>

        <a name="top"></a>
        <div id="contact">
	<div class="partial-container">
		<h5>Contact</h5>
		<p><a href="http://twitter.com/mitchartemis" target="_blank"><span class="fa fa-twitter"></span> Contact me via Twitter</a></p>
		<p><a href="http://github.com/acoustep" target="_blank"><span class="fa fa-github"></span> Contact me via Github</a></p>
	</div>
</div>

        <div id="container">
          <div id="main">
            <h1>Laravel Blogs</h1>
	<article class="blurb">
		<h1>
			<a href="/read/laravel-elixir-with-bootstrap-sass-and-font-awesome">Laravel Elixir with Bootstrap SASS and Font Awesome</a>
		</h1>
    <div class="tags">
        <a href="/read/categories/laravel">Laravel</a>
        <a href="/read/categories/laravel-elixir">Laravel Elixir</a>
        <a href="/read/categories/bootstrap">Bootstrap</a>
        <a href="/read/categories/font-awesome">Font Awesome</a>
        <a href="/read/categories/sass">SASS</a>
    </div>
		<time>Apr 12, 2015</time>

		<p>This is my current Gulpfile for Laravel Elixir which is heavily influenced from <a href="https://gist.github.com/ericbarnes/c3ab73520bae8f1a83a2">this gist</a> and the comments within it.  All Iâ€™ve done is added Font Awesome, set it compile all scripts in <code>resources/javascripts</code> which is where I keep my own Javascript...</p>

		<a href="/read/laravel-elixir-with-bootstrap-sass-and-font-awesome">Read more</a>
	</article>
	<article class="blurb">
		<h1>
			<a href="/read/making-moderation-easy">Making moderation easy</a>
		</h1>
    <div class="tags">
        <a href="/read/categories/laravel">Laravel</a>
        <a href="/read/categories/laravel-4-2">Laravel 4.2</a>
        <a href="/read/categories/eurekar">Eurekar</a>
        <a href="/read/categories/moderation">Moderation</a>
    </div>
		<time>Apr  6, 2015</time>

		<p>For just over a year I&rsquo;ve been working on a website called <a href="http://eurekar.co.uk">Eurekar</a>. To describe it briefly, it&rsquo;s a cool little website which has news articles for cars, a fairly complex article search and another search for UK car dealerships.</p>

<p>I have built an insane amount of content management systems in Laravel but what makes Eurekar unique is that the content is pulled from an external XML feed rather than created first hand in the CMS.</p>

<p>

		<a href="/read/making-moderation-easy">Read more</a>
	</article>
	<article class="blurb">
		<h1>
			<a href="/read/realtime-chat-with-laravel-ember-js-and-pusher">Realtime chat with Laravel, Ember JS and Pusher</a>
		</h1>
    <div class="tags">
        <a href="/read/categories/laravel">Laravel</a>
        <a href="/read/categories/laravel-5">Laravel 5</a>
        <a href="/read/categories/ember-js">Ember JS</a>
        <a href="/read/categories/pusher">Pusher</a>
        <a href="/read/categories/bootstrap-3">Bootstrap 3</a>
    </div>
		<time>Mar 29, 2015</time>

		<p>I&rsquo;ve been hearing a lot of noise about <a href="https://www.firebase.com/">Firebase</a> recently. Lots of good noise.  When I first started making this article I wanted to make use of <a href="http://firehose.io/">Firehose</a> which is an open source alternative to Firebase. </p>

<p>Setting up the API with Laravel was a breeze.  The only stumbling block was with my Ubuntu Vagrant box which installed a version of Redis which was too old (Firehose requries 2.6+ where as Ubuntu&rsquo;s package manager only has 2.2).   This was a pretty simple to fix and if you <em>are</em> interested in Firehose then you can find instructions for getting the latest Redis <a href="http://codecuriosity.com/blog/2013/10/29/install-redis-on-ubuntu/">here</a>.</p>

<p>Anyway I started building my Ember application and I hit a brick wall.  Firehose touts Ember support out of the box but I can see literally no documentation on how to get started with it.</p>

<p>I decided to switch to Pusher which I&rsquo;m already familiar with.  Unfortunately Pusher isn&rsquo;t open source but it does have a reasonable free package.  This allowed me to continue the use of my Laravel application where as switching to Firebase would not.  Also, there is already a pretty amazing Firebase Ember tutorial <a href="https://www.firebase.com/blog/2015-03-13-ember-cli-in-9-minutes.html">here</a> so it seems pointless to do the same thing.</p>

<p>This article will show you a very bare bones chat system with Laravel 5, Ember JS 1.10 and Pusher.</p>

<p>

		<a href="/read/realtime-chat-with-laravel-ember-js-and-pusher">Read more</a>
	</article>
	<article class="blurb">
		<h1>
			<a href="/read/bootstrap-2-pagination-in-laravel-5">Bootstrap 2 pagination in Laravel 5</a>
		</h1>
    <div class="tags">
        <a href="/read/categories/laravel">Laravel</a>
        <a href="/read/categories/laravel-5">Laravel 5</a>
        <a href="/read/categories/bootstrap-2">Bootstrap 2</a>
        <a href="/read/categories/twitter-bootstrap">Twitter Bootstrap</a>
    </div>
		<time>Mar 21, 2015</time>

		<p>I recently had to help port a website that used Twitter Bootstrap 2 to Laravel 5 and discovered that changing the pagination template is completely different in Laravel 5.</p>

<p>

		<a href="/read/bootstrap-2-pagination-in-laravel-5">Read more</a>
	</article>
	<article class="blurb">
		<h1>
			<a href="/read/simple-search-with-laravel-and-elasticsearch">Simple Search with Laravel and ElasticSearch</a>
		</h1>
    <div class="tags">
        <a href="/read/categories/laravel">Laravel</a>
        <a href="/read/categories/laravel-4-2">Laravel 4.2</a>
        <a href="/read/categories/elasticsearch">ElasticSearch</a>
        <a href="/read/categories/elasticsearch-1-4">ElasticSearch 1.4</a>
        <a href="/read/categories/php">PHP</a>
        <a href="/read/categories/search">Search</a>
    </div>
		<time>Jan 10, 2015</time>

		<p>I was recently asked to make a search engine for a client&rsquo;s website. Normally I would go down the MySQL fulltext search route but I was feeling rather adventurous at the time.  I had no experience with ElasticSearch, Apache Solr or any other search system prior to this so I decided to pick ElasticSearch and dive in head first. This tutorial is a result of some of the things I picked up while learning it.</p>

<p>I aim to show you how to set up the <a href="https://github.com/adamfairholm/Elasticquent">Elasticquent</a> Laravel package and some basic ways to fine tune your search engine.</p>

<p>

		<a href="/read/simple-search-with-laravel-and-elasticsearch">Read more</a>
	</article>
	<article class="blurb">
		<h1>
			<a href="/read/laravel-4-1-one-to-one-polymorphic-relationships">Laravel 4.1 one-to-one polymorphic relationships</a>
		</h1>
    <div class="tags">
        <a href="/read/categories/laravel-4-1">Laravel 4.1</a>
        <a href="/read/categories/laravel">Laravel</a>
        <a href="/read/categories/php">PHP</a>
        <a href="/read/categories/eloquent">Eloquent</a>
    </div>
		<time>Jan 20, 2014</time>

		<p>To use one-to-one polymorphic relationships in Laravel 4.1  use the &ldquo;morphOne&rdquo; method in your models.</p>

<p>For example: I have two tables, pages and products.  I want to be able to add one featured image to each of these.</p>

<p>The Product model would look like this:</p>
<div class="highlight php"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2
3
4
5
6</pre></td><td class="code"><pre><span class="cp">&lt;?php</span>
<span class="k">class</span> <span class="nc">Product</span> <span class="k">extends</span> <span class="nx">Eloquent</span> <span class="p">{</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">image</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">morphOne</span><span class="p">(</span><span class="s1">'FeaturedImage'</span><span class="p">,</span> <span class="s1">'imageable'</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table>
</div>

<p>The Page model would be:</p>
<div class="highlight php"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2
3
4
5
6</pre></td><td class="code"><pre><span class="cp">&lt;?php</span>
<span class="k">class</span> <span class="nc">Page</span> <span class="k">extends</span> <span class="nx">Eloquent</span> <span class="p">{</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">image</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">morphOne</span><span class="p">(</span><span class="s1">'FeaturedImage'</span><span class="p">,</span> <span class="s1">'imageable'</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table>
</div>

<p>

		<a href="/read/laravel-4-1-one-to-one-polymorphic-relationships">Read more</a>
	</article>
	<article class="blurb">
		<h1>
			<a href="/read/creating-a-twitter-feed-in-laravel-4">Creating a Twitter Feed in Laravel 4</a>
		</h1>
    <div class="tags">
        <a href="/read/categories/laravel">Laravel</a>
        <a href="/read/categories/laravel-4">Laravel 4</a>
        <a href="/read/categories/twitter">Twitter</a>
        <a href="/read/categories/php">PHP</a>
    </div>
		<time>Aug 16, 2013</time>

		<p><em>This tutorial is now out of date - checkout <a href="http://packalyst.com/packages/package/philo/laravel-twitter">philo/laravel-twitter</a> or <a href="http://packalyst.com/packages/package/thujohn/twitter">thujohn/twitter</a> for an easier and more up to date solution.</em></p>

<p>In this tutorial I aim to show three things</p>

<ul>
<li>How to get Twitteroath working with Laravel 4</li>
<li>How to create and access a new configuration file for your twitter settings</li>
<li>How  to create a  helper method for your tweets</li>
</ul>

<p>To start off install <a href="https://github.com/abraham/twitteroauth">twitteroath</a> via composer.</p>

<p>Put line 4 in your <code>composer.json</code> with the rest of the Laravel Composer set up and run <code>composer update</code> or <code>composer install</code> if you haven&rsquo;t already</p>
<div class="highlight javascript"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20</pre></td><td class="code"><pre><span class="p">{</span>
    <span class="s2">"require"</span><span class="err">:</span> <span class="p">{</span>
        <span class="s2">"laravel/framework"</span><span class="err">:</span> <span class="s2">"4.0.*@dev"</span><span class="p">,</span>
        <span class="s2">"abraham/twitteroauth"</span><span class="err">:</span> <span class="s2">"dev-add-composer-json"</span>
    <span class="p">},</span>
    <span class="s2">"autoload"</span><span class="err">:</span> <span class="p">{</span>
        <span class="s2">"classmap"</span><span class="err">:</span> <span class="p">[</span>
            <span class="s2">"app/commands"</span><span class="p">,</span>
            <span class="s2">"app/controllers"</span><span class="p">,</span>
            <span class="s2">"app/models"</span><span class="p">,</span>
            <span class="s2">"app/database/migrations"</span><span class="p">,</span>
            <span class="s2">"app/database/seeds"</span><span class="p">,</span>
            <span class="s2">"app/tests/TestCase.php"</span>
        <span class="p">]</span>
    <span class="p">},</span>
    <span class="s2">"scripts"</span><span class="err">:</span> <span class="p">{</span>
        <span class="s2">"post-update-cmd"</span><span class="err">:</span> <span class="s2">"php artisan optimize"</span>
    <span class="p">},</span>
    <span class="s2">"minimum-stability"</span><span class="err">:</span> <span class="s2">"dev"</span>
<span class="p">}</span>
</pre></td></tr></tbody></table>
</div>

<p>

		<a href="/read/creating-a-twitter-feed-in-laravel-4">Read more</a>
	</article>
	<article class="blurb">
		<h1>
			<a href="/read/automating-configurations-with-laravel">Automating Configurations with Laravel</a>
		</h1>
    <div class="tags">
        <a href="/read/categories/laravel">Laravel</a>
        <a href="/read/categories/laravel-4">Laravel 4</a>
    </div>
		<time>Aug  7, 2013</time>

		<p>One of my favourite features of Laravel is how it handles configurations for different environments.  You can have different settings for development, staging, beta, production and even separate configurations for each developer working on the project.</p>

<p>With a fresh version of Laravel installed: take a look at the <code>app/bootstrap/start.php</code> file.  Near the top of the file you should see the following snippet of code:</p>
<div class="highlight php"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2
3
4</pre></td><td class="code"><pre><span class="cp">&lt;?php</span>
<span class="nv">$env</span> <span class="o">=</span> <span class="nv">$app</span><span class="o">-&gt;</span><span class="na">detectEnvironment</span><span class="p">(</span><span class="k">array</span><span class="p">(</span>
    <span class="s1">'local'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span><span class="s1">'your-machine-name'</span><span class="p">),</span>
<span class="p">));</span>
</pre></td></tr></tbody></table>
</div>

<p>Within the <code>detectEnvironment()</code> method you can define an array of configurations.</p>

<p>If you and a friend or coworker are working on a project and using Git to keep track of changes you could use the following:</p>
<div class="highlight php"><table style="border-spacing: 0"><tbody><tr><td class="gutter gl" style="text-align: right"><pre class="lineno">1
2
3
4
5</pre></td><td class="code"><pre><span class="cp">&lt;?php</span>
<span class="nv">$env</span> <span class="o">=</span> <span class="nv">$app</span><span class="o">-&gt;</span><span class="na">detectEnvironment</span><span class="p">(</span><span class="k">array</span><span class="p">(</span>
    <span class="s1">'mitch'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span><span class="s1">'mitch-machine-name'</span><span class="p">),</span>
    <span class="s1">'tom'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span><span class="s1">'tom-machine-name'</span><span class="p">),</span>
<span class="p">));</span>
</pre></td></tr></tbody></table>
</div>

<p>Laravel will detect which configuration to use from your computer&rsquo;s hostname.</p>

<p>

		<a href="/read/automating-configurations-with-laravel">Read more</a>
	</article>

<div class="pagination">
	<ul>
			<li class="page-prev"><a href="/">Back to Latest Blogs</a></li>
	</ul>
</div>


          </div>
        </div>
        <div class="push"></div>
      </div>

      <footer class="footer-2">
        <div class="partial-container">
          <ul>
            <li><a class="contact" href="#">Contact</a></li>
          </ul>

          <div class="footer-secondary-links">
            <ul class="footer-social">
              <li>
                <a href="https://twitter.com/mitchartemis"><span class="fa fa-twitter"></span></a>
              </li>
              <li>
                <a href="https://github.com/acoustep"><span class="fa fa-github"></span></a>
              </li>
            </ul>
          </div>
        </div>
      </footer>
      <script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
      <script src="../../javascripts/application-678994e1.js" type="text/javascript"></script>
    </body>
  </html>
